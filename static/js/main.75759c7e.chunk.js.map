{"version":3,"sources":["components/TaskAdd/TaskAdd.js","components/TaskList/TaskList.js","App.js","index.js"],"names":["TaskAdd","change","title","value","onSubmit","className","placeholder","onChange","TaskList","tasks","map","task","key","id","type","checked","condition","htmlFor","App","state","tasksLength","newTaskTitle","prevId","newTitle","event","target","trim","setState","handleReset","handleTitleChange","preventDefault","newTask","this","t","length","href","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6PAmBeA,EAhBC,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,MAAOC,EAAlB,EAAkBA,MAAlB,OACd,0BAAMC,SAAUH,GACd,2BACEI,UAAU,WACVC,YAAY,yBACZC,SAAUL,EACVC,MAAOA,MCoBEK,EA1BE,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACf,wBAAIJ,UAAU,aACXI,EAAMC,KAAI,SAAAC,GAAI,OACb,wBAAIC,IAAKD,EAAKE,IACZ,yBAAKR,UAAU,QACb,2BACES,KAAK,WACLT,UAAU,SACVU,QAASJ,EAAKK,UACdH,GAAIF,EAAKE,KAEX,2BAAOI,QAASN,EAAKE,IAClBF,EAAKT,OAER,4BAAQY,KAAK,SAAST,UAAU,aAElC,2BAAOS,KAAK,OAAOT,UAAU,eC2EtBa,E,4MAzFbC,MAAQ,CACNC,YAAa,EACbC,aAAc,GACdC,OAAQ,EACRb,MAAO,I,EAITc,SAAW,SAACC,GACNA,EAAMC,OAAOtB,MAAMuB,QACrB,EAAKC,SAAS,CACZN,aAAcG,EAAMC,OAAOtB,S,EAKjCyB,YAAc,WACZ,EAAKD,SAAS,CACZN,aAAc,M,EAIlBQ,kBAAoB,SAACL,GACnBA,EAAMM,iBACN,EAAKH,UAAS,SAACR,GACb,IAAMY,EAAU,CACdlB,GAAIM,EAAMG,OAAS,EACnBpB,MAAOiB,EAAME,aACbL,WAAW,GAIb,MAAO,CACLP,MAAM,GAAD,mBAAMU,EAAMV,OAAZ,CAAmBsB,IACxBT,OAAQS,EAAQlB,GAChBO,YAAaD,EAAMC,YAAc,MAIrC,EAAKQ,e,uDAIL,OACE,6BAASvB,UAAU,WACjB,4BAAQA,UAAU,UAChB,qCACA,kBAAC,EAAD,CACEH,MAAO8B,KAAKT,SACZtB,OAAQ+B,KAAKH,kBACb1B,MAAO6B,KAAKb,MAAME,gBAItB,6BAAShB,UAAU,QACjB,2BAAOS,KAAK,WAAWD,GAAG,aAAaR,UAAU,eACjD,2BAAOY,QAAQ,cAAf,wBAEA,kBAAC,EAAD,CAAUR,MAAOuB,KAAKb,MAAMV,SAG9B,4BAAQJ,UAAU,UAChB,0BAAMA,UAAU,cACb2B,KAAKb,MAAMV,MAAMC,KAAI,SAAAuB,GAAC,MAAoB,QAAhBA,EAAEjB,aAAqBkB,QAGpD,wBAAI7B,UAAU,WACZ,4BACE,uBAAG8B,KAAK,KAAK9B,UAAU,YAAvB,QAGF,4BACE,uBAAG8B,KAAK,YAAR,WAGF,4BACE,uBAAGA,KAAK,eAAR,eAIJ,4BAAQrB,KAAK,SAAST,UAAU,mBAAhC,yB,GAjFQ+B,IAAMC,WCExBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.75759c7e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TaskAdd = ({ change, title, value }) => (\n  <form onSubmit={change}>\n    <input\n      className=\"new-todo\"\n      placeholder=\"What needs to be done?\"\n      onChange={title}\n      value={value}\n    />\n  </form>\n);\n\nTaskAdd.propTypes = {\n  change: PropTypes.func.isRequired,\n  title: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\nexport default TaskAdd;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TaskList = ({ tasks }) => (\n  <ul className=\"todo-list\">\n    {tasks.map(task => (\n      <li key={task.id}>\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            checked={task.condition}\n            id={task.id}\n          />\n          <label htmlFor={task.id}>\n            {task.title}\n          </label>\n          <button type=\"button\" className=\"destroy\" />\n        </div>\n        <input type=\"text\" className=\"edit\" />\n      </li>\n    ))}\n\n  </ul>\n);\n\nTaskList.propTypes = {\n  tasks: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\nexport default TaskList;\n","import React from 'react';\nimport TaskAdd from './components/TaskAdd/TaskAdd';\nimport TaskList from './components/TaskList/TaskList';\n\nclass App extends React.Component {\n  state = {\n    tasksLength: 0,\n    newTaskTitle: '',\n    prevId: 0,\n    tasks: [],\n\n  }\n\n  newTitle = (event) => {\n    if (event.target.value.trim()) {\n      this.setState({\n        newTaskTitle: event.target.value,\n      });\n    }\n  };\n\n  handleReset = () => {\n    this.setState({\n      newTaskTitle: '',\n    });\n  };\n\n  handleTitleChange = (event) => {\n    event.preventDefault();\n    this.setState((state) => {\n      const newTask = {\n        id: state.prevId + 1,\n        title: state.newTaskTitle,\n        condition: false,\n\n      };\n\n      return {\n        tasks: [...state.tasks, newTask],\n        prevId: newTask.id,\n        tasksLength: state.tasksLength + 1,\n\n      };\n    });\n    this.handleReset();\n  };\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>Tasks</h1>\n          <TaskAdd\n            title={this.newTitle}\n            change={this.handleTitleChange}\n            value={this.state.newTaskTitle}\n          />\n        </header>\n\n        <section className=\"main\">\n          <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n          <TaskList tasks={this.state.tasks} />\n        </section>\n\n        <footer className=\"footer\">\n          <span className=\"todo-count\">\n            {this.state.tasks.map(t => t.condition === 'new').length}\n          </span>\n\n          <ul className=\"filters\">\n            <li>\n              <a href=\"#/\" className=\"selected\">All</a>\n            </li>\n\n            <li>\n              <a href=\"#/active\">Active</a>\n            </li>\n\n            <li>\n              <a href=\"#/completed\">Completed</a>\n            </li>\n          </ul>\n\n          <button type=\"button\" className=\"clear-completed\">\n            Clear completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './base.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}